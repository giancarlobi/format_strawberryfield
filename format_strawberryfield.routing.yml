# All Routes for the Metadata Display Content Entity that will store Twig templates
entity.metadatadisplay_entity.canonical:
  path: '/metadatadisplay/{metadatadisplay_entity}'
  defaults:
    _entity_view: 'metadatadisplay_entity'
    _title: 'Metadata Display Content'
  requirements:
    _entity_access: 'metadatadisplay_entity.view'

entity.metadatadisplay_entity.collection:
  path: '/metadatadisplay/list'
  defaults:
    _entity_list: 'metadatadisplay_entity'
    _title: 'Metadata Display List'
  requirements:
    _permission: 'administer metadatadisplay entity'

format_strawberryfield.metadatadisplay_add:
  path: '/metadatadisplay/add'
  defaults:
    _entity_form: metadatadisplay_entity.add
    _title: 'Add Metadata Display'
  requirements:
    _entity_create_access: 'metadatadisplay_entity'

entity.metadatadisplay_entity.edit_form:
  path: '/metadatadisplay/{metadatadisplay_entity}/edit'
  defaults:
    _entity_form: metadatadisplay_entity.edit
    _title: 'Edit Metadata Display'
  requirements:
    _entity_access: 'metadatadisplay_entity.edit'

entity.metadatadisplay_entity.delete_form:
  path: '/metadatadisplay/{metadatadisplay_entity}/delete'
  defaults:
    _entity_form: metadatadisplay_entity.delete
    _title: 'Delete Metadata Display'
  requirements:
    _entity_access: 'metadatadisplay_entity.delete'

# Metadatadisplay settings route

format_strawberryfield.metadatadisplay_settings:
  path: 'admin/structure/metadatadisplay_entity_settings'
  defaults:
    _form: '\Drupal\format_strawberryfield\Form\MetadataDisplaySettingsForm'
    _title: 'Metadata Display Settings'
  requirements:
    _permission: 'administer metadatadisplay entity'

# Direct File access for SBF managed files.
format_strawberryfield.iiifbinary:
  path: '/do/{node}/iiif/{uuid}/full/full/0/{format}'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\IiifBinaryController::servefile'
  options:
    parameters:
      node:
        type: 'entity:node'
  requirements:
    node: \d+
    uuid: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
    format: .+
    _entity_access: 'node.view'

# Direct File access for owner to Temporary files.
format_strawberryfield.tempiiifbinary:
  path: '/domedia/iiif/{uuid}/full/full/0/{format}'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\IiifBinaryController::servetempfile'
  requirements:
    uuid: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
    format: .+
    _permission: 'access content'

# Direct access to Metadata display processed json using Metadata Expose Config Entity.
format_strawberryfield.metadatadisplay_caster:
  path: '/do/{node}/metadata/{metadataexposeconfig_entity}/{format}'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\MetadataExposeDisplayController::castViaTwig'
  options:
    parameters:
      node:
        type: 'entity:node'
      metadataexposeconfig_entity:
        type: 'entity:metadataexpose_entity'
      resource_type:
        type: 'ado'
  requirements:
    format: .+
    _entity_access: 'node.view'
#    _entity_access: 'metadataexpose_entity.view'

format_strawberryfield.iiif_admin_settings_form:
  path: '/admin/config/archipelago/iiif'
  defaults:
    _form: '\Drupal\format_strawberryfield\Form\IiifSettingsForm'
    _title: 'IIIF Server Settings Form'
  requirements:
    _permission: 'access administration pages'
  options:
    _admin_route: TRUE

format_strawberryfield.view_mode_mapping_settings_form:
  path: '/admin/config/archipelago/viewmode_mapping'
  defaults:
    _form: '\Drupal\format_strawberryfield\Form\ViewModeMappingSettingsForm'
    _title: 'ADO Type to View Mode Mapping Form'
  requirements:
    _permission: 'access administration pages'
  options:
    _admin_route: TRUE

# Direct File access for replayweb JS Worker
# This file will be called by replayweb library and needs to exist in that exact path
# Reason why we went for a controller. Just an overhead!
format_strawberryfield.replayweb:
  path: '/replay/sw.js'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\JsWorkerController::servereplay'
  requirements:
    _permission: 'access content'
format_strawberryfield.replayweb_index:
  path: '/replay/index.html'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\JsWorkerController::serveindex'
  requirements:
    _permission: 'access content'

# Update in temporary State/limbo a generated Webannotation.
format_strawberryfield.push_webannotation:
  path: '/do/{node}/webannon/put'
  methods: [PUT]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::putTemp'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.update'
    _permission: 'add strawberryfield webannotation'
# Delete in temporary State/limbo a generated WebAnnotation.
format_strawberryfield.delete_webannotation:
  path: '/do/{node}/webannon/delete'
  methods: [DELETE]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::deleteTemp'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.update'
    _permission: 'add strawberryfield webannotation'
# Persist in temporary State/limbo any generated WebAnnotations.
format_strawberryfield.post_webannotation:
  path: '/do/{node}/webannon/post'
  methods: [POST]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::postTemp'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.update'
    _permission: 'add strawberryfield webannotation'
# Persist in a SBF any generated WebAnnotations.
format_strawberryfield.save_webannotations:
  path: '/do/{node}/webannon/save'
  methods: [POST]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::persist'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.update'
    _permission: 'add strawberryfield webannotation'

# Persist in a SBF any generated Webannotations.
format_strawberryfield.get_webannotations:
  path: '/do/{node}/webannon/read'
  methods: [GET]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::read'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.view'
    _permission: 'view strawberryfield webannotation'

# Persist in a SBF any generated Webannotations.
format_strawberryfield.deletetmp_webannotations:
  path: '/do/{node}/webannon/deletetmp'
  methods: [POST]
  defaults:
    _controller: '\Drupal\format_strawberryfield\Controller\WebAnnotationController::deleteKeyStore'
  options:
    parameters:
      node:
        type: 'entity:node'
      resource_type:
        type: 'ado'
  requirements:
    _format: 'json'
    _entity_access: 'node.update'
    _permission: 'add strawberryfield webannotation'